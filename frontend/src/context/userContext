import { createContext, useState, useEffect } from "react";
import axios from "axios";

export const UserContext = createContext();

export const UserProvider = ({ children }) => {
  const [user, setUser] = useState(null);

  useEffect(() => {
    const fetchUser = async () => {
      try {
        const token = localStorage.getItem("accessToken");
        if (token) {
          // No backend, o token deve ser enviado no header de Authorization
          const response = await axios.get("http://localhost:3000/users", {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          });
          setUser(response.data);
        }
      } catch (error) {
        console.error("Erro ao buscar usuário:", error);
        localStorage.removeItem("accessToken");
        setUser(null);
      }
    };

    fetchUser();
  }, []);

  const loginUser = async (userData) => {
    try {
      const response = await axios.post(
        "http://localhost:3000/login",
        userData
      );
      // No seu backend, o token pode ser retornado diretamente
      // Aqui, assumimos que o token está na propriedade 'token' da resposta
      setUser(response.data.user);
      localStorage.setItem("accessToken", response.data.token);
    } catch (error) {
      console.error("Erro ao fazer login:", error);
      throw new Error("Email ou senha incorretos.");
    }
  };

  const logoutUser = () => {
    localStorage.removeItem("accessToken");
    setUser(null);
  };

  return (
    <UserContext.Provider value={{ user, loginUser, logoutUser }}>
      {children}
    </UserContext.Provider>
  );
};
